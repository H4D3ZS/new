{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"shortid","data":{"isAsync":false}},{"name":"./BaseRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = TabRouter;\n  exports.TabActions = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _shortid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"shortid\"));\n\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./BaseRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo: function jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    }\n  };\n  exports.TabActions = TabActions;\n\n  var getRouteHistory = function getRouteHistory(routes, index, backBehavior) {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n\n    switch (backBehavior) {\n      case 'initialRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n\n        break;\n\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n\n        break;\n\n      case 'history':\n        break;\n    }\n\n    return history;\n  };\n\n  var changeIndex = function changeIndex(state, index, backBehavior) {\n    var history;\n\n    if (backBehavior === 'history') {\n      var currentKey = state.routes[index].key;\n      history = state.history.filter(function (it) {\n        return it.type === 'route' ? it.key !== currentKey : false;\n      }).concat({\n        type: TYPE_ROUTE,\n        key: currentKey\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior);\n    }\n\n    return _objectSpread({}, state, {\n      index: index,\n      history: history\n    });\n  };\n\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n        _ref$backBehavior = _ref.backBehavior,\n        backBehavior = _ref$backBehavior === void 0 ? 'history' : _ref$backBehavior;\n\n    var router = _objectSpread({}, _BaseRouter.default, {\n      type: 'tab',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(function (name) {\n          return {\n            name: name,\n            key: name + \"-\" + (0, _shortid.default)(),\n            params: routeParamList[name]\n          };\n        });\n        var history = getRouteHistory(routes, index, backBehavior);\n        return {\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _shortid.default)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var _state$history, _history;\n\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n        var state = partialState;\n\n        if (state.stale === false) {\n          return state;\n        }\n\n        var routes = routeNames.map(function (name) {\n          var route = state.routes.find(function (r) {\n            return r.name === name;\n          });\n          return _objectSpread({}, route, {\n            name: name,\n            key: route && route.name === name && route.key ? route.key : name + \"-\" + (0, _shortid.default)(),\n            params: routeParamList[name] !== undefined ? _objectSpread({}, routeParamList[name], {}, route ? route.params : undefined) : route ? route.params : undefined\n          });\n        });\n        var index = Math.min(Math.max(typeof state.index === 'number' ? state.index : routeNames.indexOf(state.routes[0].name), 0), routes.length - 1);\n        var history = (_state$history = state.history) == null ? void 0 : _state$history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n\n        if (!((_history = history) == null ? void 0 : _history.length)) {\n          history = getRouteHistory(routes, index, backBehavior);\n        }\n\n        return {\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _shortid.default)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n            routeParamList = _ref4.routeParamList;\n        var routes = routeNames.map(function (name) {\n          return state.routes.find(function (r) {\n            return r.name === name;\n          }) || {\n            name: name,\n            key: name + \"-\" + (0, _shortid.default)(),\n            params: routeParamList[name]\n          };\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior);\n        }\n\n        return _objectSpread({}, state, {\n          history: history,\n          routeNames: routeNames,\n          routes: routes,\n          index: index\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n\n        return changeIndex(state, index, backBehavior);\n      },\n      getStateForAction: function getStateForAction(state, action) {\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n            {\n              var index = -1;\n\n              if (action.type === 'NAVIGATE' && action.payload.key) {\n                index = state.routes.findIndex(function (route) {\n                  return route.key === action.payload.key;\n                });\n              } else {\n                index = state.routes.findIndex(function (route) {\n                  return route.name === action.payload.name;\n                });\n              }\n\n              if (index === -1) {\n                return null;\n              }\n\n              return changeIndex(_objectSpread({}, state, {\n                routes: action.payload.params !== undefined ? state.routes.map(function (route, i) {\n                  return i === index ? _objectSpread({}, route, {\n                    params: _objectSpread({}, route.params, {}, action.payload.params)\n                  }) : route;\n                }) : state.routes\n              }), index, backBehavior);\n            }\n\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n\n              var previousKey = state.history[state.history.length - 2].key;\n\n              var _index = state.routes.findIndex(function (route) {\n                return route.key === previousKey;\n              });\n\n              if (_index === -1) {\n                return null;\n              }\n\n              return _objectSpread({}, state, {\n                history: state.history.slice(0, -1),\n                index: _index\n              });\n            }\n\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n        return action.type === 'NAVIGATE';\n      },\n      actionCreators: TabActions\n    });\n\n    return router;\n  }\n});","lineCount":265,"map":[[12,0,1,0],[14,0,2,0],[20,0,36,0],[20,6,36,6,"TYPE_ROUTE"],[20,16,36,16],[20,19,36,19],[20,26,36,0],[21,0,38,7],[21,6,38,13,"TabActions"],[21,16,38,23],[21,19,38,26],[22,0,39,2,"jumpTo"],[22,4,39,2,"jumpTo"],[22,10,38,26],[22,28,39,9,"name"],[22,32,38,26],[22,34,39,23,"params"],[22,40,38,26],[22,42,39,55],[23,0,40,4],[23,13,40,11],[24,0,40,13,"type"],[24,8,40,13,"type"],[24,12,40,17],[24,14,40,19],[24,23,40,11],[25,0,40,30,"payload"],[25,8,40,30,"payload"],[25,15,40,37],[25,17,40,39],[26,0,40,41,"name"],[26,10,40,41,"name"],[26,14,40,45],[26,16,40,41,"name"],[26,20,40,39],[27,0,40,47,"params"],[27,10,40,47,"params"],[27,16,40,53],[27,18,40,47,"params"],[28,0,40,39],[29,0,40,11],[29,7,40,4],[30,0,41,3],[31,0,38,26],[31,3,38,7],[34,0,44,0],[34,6,44,6,"getRouteHistory"],[34,21,44,21],[34,24,44,24],[34,33,44,6,"getRouteHistory"],[34,48,44,24],[34,49,45,2,"routes"],[34,55,44,24],[34,57,46,2,"index"],[34,62,44,24],[34,64,47,2,"backBehavior"],[34,76,44,24],[34,78,48,5],[35,0,49,2],[35,8,49,8,"history"],[35,15,49,15],[35,18,49,18],[35,19,49,19],[36,0,49,21,"type"],[36,6,49,21,"type"],[36,10,49,25],[36,12,49,27,"TYPE_ROUTE"],[36,22,49,19],[37,0,49,39,"key"],[37,6,49,39,"key"],[37,9,49,42],[37,11,49,44,"routes"],[37,17,49,50],[37,18,49,51,"index"],[37,23,49,50],[37,24,49,44],[37,25,49,58,"key"],[38,0,49,19],[38,5,49,18],[38,6,49,2],[40,0,51,2],[40,12,51,10,"backBehavior"],[40,24,51,2],[41,0,52,4],[41,11,52,9],[41,25,52,4],[42,0,53,6],[42,12,53,10,"index"],[42,17,53,15],[42,22,53,20],[42,23,53,6],[42,25,53,23],[43,0,54,8,"history"],[43,10,54,8,"history"],[43,17,54,15],[43,18,54,16,"unshift"],[43,25,54,8],[43,26,54,24],[44,0,54,26,"type"],[44,12,54,26,"type"],[44,16,54,30],[44,18,54,32,"TYPE_ROUTE"],[44,28,54,24],[45,0,54,44,"key"],[45,12,54,44,"key"],[45,15,54,47],[45,17,54,49,"routes"],[45,23,54,55],[45,24,54,56],[45,25,54,55],[45,26,54,49],[45,27,54,59,"key"],[46,0,54,24],[46,11,54,8],[47,0,55,7],[49,0,56,6],[51,0,57,4],[51,11,57,9],[51,18,57,4],[52,0,58,6],[52,13,58,11],[52,17,58,15,"i"],[52,18,58,16],[52,21,58,19,"index"],[52,26,58,6],[52,28,58,26,"i"],[52,29,58,27],[52,32,58,30],[52,33,58,6],[52,35,58,33,"i"],[52,36,58,34],[52,38,58,6],[52,40,58,38],[53,0,59,8,"history"],[53,10,59,8,"history"],[53,17,59,15],[53,18,59,16,"unshift"],[53,25,59,8],[53,26,59,24],[54,0,59,26,"type"],[54,12,59,26,"type"],[54,16,59,30],[54,18,59,32,"TYPE_ROUTE"],[54,28,59,24],[55,0,59,44,"key"],[55,12,59,44,"key"],[55,15,59,47],[55,17,59,49,"routes"],[55,23,59,55],[55,24,59,56,"i"],[55,25,59,57],[55,28,59,60],[55,29,59,55],[55,30,59,49],[55,31,59,63,"key"],[56,0,59,24],[56,11,59,8],[57,0,60,7],[59,0,61,6],[61,0,62,4],[61,11,62,9],[61,20,62,4],[62,0,64,6],[63,0,51,2],[65,0,67,2],[65,11,67,9,"history"],[65,18,67,2],[66,0,68,1],[66,3,44,0],[68,0,70,0],[68,6,70,6,"changeIndex"],[68,17,70,17],[68,20,70,20],[68,29,70,6,"changeIndex"],[68,40,70,20],[68,41,71,2,"state"],[68,46,70,20],[68,48,72,2,"index"],[68,53,70,20],[68,55,73,2,"backBehavior"],[68,67,70,20],[68,69,74,5],[69,0,75,2],[69,8,75,6,"history"],[69,15,75,2],[71,0,77,2],[71,8,77,6,"backBehavior"],[71,20,77,18],[71,25,77,23],[71,34,77,2],[71,36,77,34],[72,0,78,4],[72,10,78,10,"currentKey"],[72,20,78,20],[72,23,78,23,"state"],[72,28,78,28],[72,29,78,29,"routes"],[72,35,78,23],[72,36,78,36,"index"],[72,41,78,23],[72,43,78,43,"key"],[72,46,78,4],[73,0,80,4,"history"],[73,6,80,4,"history"],[73,13,80,11],[73,16,80,14,"state"],[73,21,80,19],[73,22,80,20,"history"],[73,29,80,14],[73,30,81,7,"filter"],[73,36,80,14],[73,37,81,14],[73,47,81,14,"it"],[73,49,81,16],[74,0,81,16],[74,15,81,21,"it"],[74,17,81,23],[74,18,81,24,"type"],[74,22,81,21],[74,27,81,33],[74,34,81,21],[74,37,81,43,"it"],[74,39,81,45],[74,40,81,46,"key"],[74,43,81,43],[74,48,81,54,"currentKey"],[74,58,81,21],[74,61,81,67],[74,66,81,16],[75,0,81,16],[75,7,80,14],[75,9,82,7,"concat"],[75,15,80,14],[75,16,82,14],[76,0,82,16,"type"],[76,8,82,16,"type"],[76,12,82,20],[76,14,82,22,"TYPE_ROUTE"],[76,24,82,14],[77,0,82,34,"key"],[77,8,82,34,"key"],[77,11,82,37],[77,13,82,39,"currentKey"],[78,0,82,14],[78,7,80,14],[78,8,80,4],[79,0,83,3],[79,5,77,2],[79,11,83,9],[80,0,84,4,"history"],[80,6,84,4,"history"],[80,13,84,11],[80,16,84,14,"getRouteHistory"],[80,31,84,29],[80,32,84,30,"state"],[80,37,84,35],[80,38,84,36,"routes"],[80,44,84,29],[80,46,84,44,"index"],[80,51,84,29],[80,53,84,51,"backBehavior"],[80,65,84,29],[80,66,84,4],[81,0,85,3],[83,0,87,2],[83,29,88,7,"state"],[83,34,87,2],[84,0,89,4,"index"],[84,6,89,4,"index"],[84,11,89,9],[84,13,89,4,"index"],[84,18,87,2],[85,0,90,4,"history"],[85,6,90,4,"history"],[85,13,90,11],[85,15,90,4,"history"],[86,0,87,2],[87,0,92,1],[87,3,70,0],[89,0,94,15],[89,11,94,24,"TabRouter"],[89,20,94,15],[89,27,97,21],[90,0,97,21],[90,8,95,2,"initialRouteName"],[90,24,97,21],[90,32,95,2,"initialRouteName"],[90,48,97,21],[91,0,97,21],[91,33,96,2,"backBehavior"],[91,45,97,21],[92,0,97,21],[92,8,96,2,"backBehavior"],[92,20,97,21],[92,54,96,17],[92,63,97,21],[94,0,98,2],[94,8,98,8,"router"],[94,14,101,3],[94,35,102,7,"BaseRouter"],[94,54,101,3],[95,0,104,4,"type"],[95,6,104,4,"type"],[95,10,104,8],[95,12,104,10],[95,17,101,3],[96,0,106,4,"getInitialState"],[96,6,106,4,"getInitialState"],[96,21,101,3],[96,55,106,52],[97,0,106,52],[97,12,106,22,"routeNames"],[97,22,106,52],[97,31,106,22,"routeNames"],[97,41,106,52],[98,0,106,52],[98,12,106,34,"routeParamList"],[98,26,106,52],[98,35,106,34,"routeParamList"],[98,49,106,52],[99,0,107,6],[99,12,107,12,"index"],[99,17,107,17],[99,20,108,8,"initialRouteName"],[99,36,108,24],[99,41,108,29,"undefined"],[99,50,108,8],[99,54,108,42,"routeNames"],[99,64,108,52],[99,65,108,53,"includes"],[99,73,108,42],[99,74,108,62,"initialRouteName"],[99,90,108,42],[99,91,108,8],[99,94,109,12,"routeNames"],[99,104,109,22],[99,105,109,23,"indexOf"],[99,112,109,12],[99,113,109,31,"initialRouteName"],[99,129,109,12],[99,130,108,8],[99,133,110,12],[99,134,107,6],[100,0,112,6],[100,12,112,12,"routes"],[100,18,112,18],[100,21,112,21,"routeNames"],[100,31,112,31],[100,32,112,32,"map"],[100,35,112,21],[100,36,112,36],[100,46,112,36,"name"],[100,50,112,40],[101,0,112,40],[101,17,112,45],[102,0,113,8,"name"],[102,12,113,8,"name"],[102,16,113,12],[102,18,113,8,"name"],[102,22,112,45],[103,0,114,8,"key"],[103,12,114,8,"key"],[103,15,114,11],[103,17,114,16,"name"],[103,21,114,11],[103,30,114,24],[103,53,112,45],[104,0,115,8,"params"],[104,12,115,8,"params"],[104,18,115,14],[104,20,115,16,"routeParamList"],[104,34,115,30],[104,35,115,31,"name"],[104,39,115,30],[105,0,112,45],[105,11,112,40],[106,0,112,40],[106,9,112,21],[106,10,112,6],[107,0,118,6],[107,12,118,12,"history"],[107,19,118,19],[107,22,118,22,"getRouteHistory"],[107,37,118,37],[107,38,118,38,"routes"],[107,44,118,37],[107,46,118,46,"index"],[107,51,118,37],[107,53,118,53,"backBehavior"],[107,65,118,37],[107,66,118,6],[108,0,120,6],[108,15,120,13],[109,0,121,8,"stale"],[109,10,121,8,"stale"],[109,15,121,13],[109,17,121,15],[109,22,120,13],[110,0,122,8,"type"],[110,10,122,8,"type"],[110,14,122,12],[110,16,122,14],[110,21,120,13],[111,0,123,8,"key"],[111,10,123,8,"key"],[111,13,123,11],[111,24,123,20],[111,47,120,13],[112,0,124,8,"index"],[112,10,124,8,"index"],[112,15,124,13],[112,17,124,8,"index"],[112,22,120,13],[113,0,125,8,"routeNames"],[113,10,125,8,"routeNames"],[113,20,125,18],[113,22,125,8,"routeNames"],[113,32,120,13],[114,0,126,8,"history"],[114,10,126,8,"history"],[114,17,126,15],[114,19,126,8,"history"],[114,26,120,13],[115,0,127,8,"routes"],[115,10,127,8,"routes"],[115,16,127,14],[115,18,127,8,"routes"],[116,0,120,13],[116,9,120,6],[117,0,129,5],[117,7,101,3],[118,0,131,4,"getRehydratedState"],[118,6,131,4,"getRehydratedState"],[118,24,101,3],[118,54,131,23,"partialState"],[118,66,101,3],[118,75,131,69],[119,0,131,69],[121,0,131,69],[121,12,131,39,"routeNames"],[121,22,131,69],[121,31,131,39,"routeNames"],[121,41,131,69],[122,0,131,69],[122,12,131,51,"routeParamList"],[122,26,131,69],[122,35,131,51,"routeParamList"],[122,49,131,69],[123,0,132,6],[123,12,132,10,"state"],[123,17,132,15],[123,20,132,18,"partialState"],[123,32,132,6],[125,0,134,6],[125,12,134,10,"state"],[125,17,134,15],[125,18,134,16,"stale"],[125,23,134,10],[125,28,134,26],[125,33,134,6],[125,35,134,33],[126,0,135,8],[126,17,135,15,"state"],[126,22,135,8],[127,0,136,7],[129,0,138,6],[129,12,138,12,"routes"],[129,18,138,18],[129,21,138,21,"routeNames"],[129,31,138,31],[129,32,138,32,"map"],[129,35,138,21],[129,36,138,36],[129,46,138,36,"name"],[129,50,138,40],[129,52,138,44],[130,0,139,8],[130,14,139,14,"route"],[130,19,139,19],[130,22,139,23,"state"],[130,27,139,22],[130,28,139,66,"routes"],[130,34,139,22],[130,35,139,73,"find"],[130,39,139,22],[130,40,140,10],[130,50,140,10,"r"],[130,51,140,11],[131,0,140,11],[131,19,140,15,"r"],[131,20,140,16],[131,21,140,17,"name"],[131,25,140,15],[131,30,140,26,"name"],[131,34,140,11],[132,0,140,11],[132,11,139,22],[132,12,139,8],[133,0,143,8],[133,35,144,13,"route"],[133,40,143,8],[134,0,145,10,"name"],[134,12,145,10,"name"],[134,16,145,14],[134,18,145,10,"name"],[134,22,143,8],[135,0,146,10,"key"],[135,12,146,10,"key"],[135,15,146,13],[135,17,147,12,"route"],[135,22,147,17],[135,26,147,21,"route"],[135,31,147,26],[135,32,147,27,"name"],[135,36,147,21],[135,41,147,36,"name"],[135,45,147,12],[135,49,147,44,"route"],[135,54,147,49],[135,55,147,50,"key"],[135,58,147,12],[135,61,148,16,"route"],[135,66,148,21],[135,67,148,22,"key"],[135,70,147,12],[135,73,149,19,"name"],[135,77,147,12],[135,86,149,27],[135,109,143,8],[136,0,150,10,"params"],[136,12,150,10,"params"],[136,18,150,16],[136,20,151,12,"routeParamList"],[136,34,151,26],[136,35,151,27,"name"],[136,39,151,26],[136,40,151,12],[136,45,151,37,"undefined"],[136,54,151,12],[136,75,153,21,"routeParamList"],[136,89,153,35],[136,90,153,36,"name"],[136,94,153,35],[136,95,151,12],[136,101,154,22,"route"],[136,106,154,27],[136,109,154,30,"route"],[136,114,154,35],[136,115,154,36,"params"],[136,121,154,27],[136,124,154,45,"undefined"],[136,133,151,12],[136,137,156,16,"route"],[136,142,156,21],[136,145,157,16,"route"],[136,150,157,21],[136,151,157,22,"params"],[136,157,156,21],[136,160,158,16,"undefined"],[137,0,143,8],[138,0,160,7],[138,9,138,21],[138,10,138,6],[139,0,162,6],[139,12,162,12,"index"],[139,17,162,17],[139,20,162,20,"Math"],[139,24,162,24],[139,25,162,25,"min"],[139,28,162,20],[139,29,163,8,"Math"],[139,33,163,12],[139,34,163,13,"max"],[139,37,163,8],[139,38,164,10],[139,45,164,17,"state"],[139,50,164,22],[139,51,164,23,"index"],[139,56,164,10],[139,61,164,33],[139,69,164,10],[139,72,165,14,"state"],[139,77,165,19],[139,78,165,20,"index"],[139,83,164,10],[139,86,166,14,"routeNames"],[139,96,166,24],[139,97,166,25,"indexOf"],[139,104,166,14],[139,105,166,33,"state"],[139,110,166,38],[139,111,166,39,"routes"],[139,117,166,33],[139,118,166,46],[139,119,166,33],[139,121,166,49,"name"],[139,125,166,14],[139,126,163,8],[139,128,167,10],[139,129,163,8],[139,130,162,20],[139,132,169,8,"routes"],[139,138,169,14],[139,139,169,15,"length"],[139,145,169,8],[139,148,169,24],[139,149,162,20],[139,150,162,6],[140,0,172,6],[140,12,172,10,"history"],[140,19,172,17],[140,40,172,20,"state"],[140,45,172,25],[140,46,172,26,"history"],[140,53,172,17],[140,74,172,20],[140,89,172,35,"filter"],[140,95,172,20],[140,96,172,42],[140,106,172,42,"it"],[140,108,172,44],[141,0,172,44],[141,17,173,8,"routes"],[141,23,173,14],[141,24,173,15,"find"],[141,28,173,8],[141,29,173,20],[141,39,173,20,"r"],[141,40,173,21],[142,0,173,21],[142,19,173,25,"r"],[142,20,173,26],[142,21,173,27,"key"],[142,24,173,25],[142,29,173,35,"it"],[142,31,173,37],[142,32,173,38,"key"],[142,35,173,21],[143,0,173,21],[143,11,173,8],[143,12,172,44],[144,0,172,44],[144,9,172,20],[144,10,172,6],[146,0,176,6],[146,12,176,10],[146,26,176,11,"history"],[146,33,176,10],[146,54,176,11],[146,63,176,20,"length"],[146,69,176,10],[146,70,176,6],[146,72,176,28],[147,0,177,8,"history"],[147,10,177,8,"history"],[147,17,177,15],[147,20,177,18,"getRouteHistory"],[147,35,177,33],[147,36,177,34,"routes"],[147,42,177,33],[147,44,177,42,"index"],[147,49,177,33],[147,51,177,49,"backBehavior"],[147,63,177,33],[147,64,177,8],[148,0,178,7],[150,0,180,6],[150,15,180,13],[151,0,181,8,"stale"],[151,10,181,8,"stale"],[151,15,181,13],[151,17,181,15],[151,22,180,13],[152,0,182,8,"type"],[152,10,182,8,"type"],[152,14,182,12],[152,16,182,14],[152,21,180,13],[153,0,183,8,"key"],[153,10,183,8,"key"],[153,13,183,11],[153,24,183,20],[153,47,180,13],[154,0,184,8,"index"],[154,10,184,8,"index"],[154,15,184,13],[154,17,184,8,"index"],[154,22,180,13],[155,0,185,8,"routeNames"],[155,10,185,8,"routeNames"],[155,20,185,18],[155,22,185,8,"routeNames"],[155,32,180,13],[156,0,186,8,"history"],[156,10,186,8,"history"],[156,17,186,15],[156,19,186,8,"history"],[156,26,180,13],[157,0,187,8,"routes"],[157,10,187,8,"routes"],[157,16,187,14],[157,18,187,8,"routes"],[158,0,180,13],[158,9,180,6],[159,0,189,5],[159,7,101,3],[160,0,191,4,"getStateForRouteNamesChange"],[160,6,191,4,"getStateForRouteNamesChange"],[160,33,101,3],[160,72,191,32,"state"],[160,77,101,3],[160,86,191,71],[161,0,191,71],[161,12,191,41,"routeNames"],[161,22,191,71],[161,31,191,41,"routeNames"],[161,41,191,71],[162,0,191,71],[162,12,191,53,"routeParamList"],[162,26,191,71],[162,35,191,53,"routeParamList"],[162,49,191,71],[163,0,192,6],[163,12,192,12,"routes"],[163,18,192,18],[163,21,192,21,"routeNames"],[163,31,192,31],[163,32,192,32,"map"],[163,35,192,21],[163,36,193,8],[163,46,193,8,"name"],[163,50,193,12],[164,0,193,12],[164,17,194,10,"state"],[164,22,194,15],[164,23,194,16,"routes"],[164,29,194,10],[164,30,194,23,"find"],[164,34,194,10],[164,35,194,28],[164,45,194,28,"r"],[164,46,194,29],[165,0,194,29],[165,19,194,33,"r"],[165,20,194,34],[165,21,194,35,"name"],[165,25,194,33],[165,30,194,44,"name"],[165,34,194,29],[166,0,194,29],[166,11,194,10],[166,16,194,53],[167,0,195,12,"name"],[167,12,195,12,"name"],[167,16,195,16],[167,18,195,12,"name"],[167,22,194,53],[168,0,196,12,"key"],[168,12,196,12,"key"],[168,15,196,15],[168,17,196,20,"name"],[168,21,196,15],[168,30,196,28],[168,53,194,53],[169,0,197,12,"params"],[169,12,197,12,"params"],[169,18,197,18],[169,20,197,20,"routeParamList"],[169,34,197,34],[169,35,197,35,"name"],[169,39,197,34],[170,0,194,53],[170,11,193,12],[171,0,193,12],[171,9,192,21],[171,10,192,6],[172,0,201,6],[172,12,201,12,"index"],[172,17,201,17],[172,20,201,20,"Math"],[172,24,201,24],[172,25,201,25,"max"],[172,28,201,20],[172,29,202,8],[172,30,201,20],[172,32,203,8,"routeNames"],[172,42,203,18],[172,43,203,19,"indexOf"],[172,50,203,8],[172,51,203,27,"state"],[172,56,203,32],[172,57,203,33,"routes"],[172,63,203,27],[172,64,203,40,"state"],[172,69,203,45],[172,70,203,46,"index"],[172,75,203,27],[172,77,203,53,"name"],[172,81,203,8],[172,82,201,20],[172,83,201,6],[173,0,206,6],[173,12,206,10,"history"],[173,19,206,17],[173,22,206,20,"state"],[173,27,206,25],[173,28,206,26,"history"],[173,35,206,20],[173,36,206,34,"filter"],[173,42,206,20],[173,43,206,41],[173,53,206,41,"it"],[173,55,206,43],[174,0,206,43],[174,17,207,8,"routes"],[174,23,207,14],[174,24,207,15,"find"],[174,28,207,8],[174,29,207,20],[174,39,207,20,"r"],[174,40,207,21],[175,0,207,21],[175,19,207,25,"r"],[175,20,207,26],[175,21,207,27,"key"],[175,24,207,25],[175,29,207,35,"it"],[175,31,207,37],[175,32,207,38,"key"],[175,35,207,21],[176,0,207,21],[176,11,207,8],[176,12,206,43],[177,0,206,43],[177,9,206,20],[177,10,206,6],[179,0,210,6],[179,12,210,10],[179,13,210,11,"history"],[179,20,210,18],[179,21,210,19,"length"],[179,27,210,6],[179,29,210,27],[180,0,211,8,"history"],[180,10,211,8,"history"],[180,17,211,15],[180,20,211,18,"getRouteHistory"],[180,35,211,33],[180,36,211,34,"routes"],[180,42,211,33],[180,44,211,42,"index"],[180,49,211,33],[180,51,211,49,"backBehavior"],[180,63,211,33],[180,64,211,8],[181,0,212,7],[183,0,214,6],[183,33,215,11,"state"],[183,38,214,6],[184,0,216,8,"history"],[184,10,216,8,"history"],[184,17,216,15],[184,19,216,8,"history"],[184,26,214,6],[185,0,217,8,"routeNames"],[185,10,217,8,"routeNames"],[185,20,217,18],[185,22,217,8,"routeNames"],[185,32,214,6],[186,0,218,8,"routes"],[186,10,218,8,"routes"],[186,16,218,14],[186,18,218,8,"routes"],[186,24,214,6],[187,0,219,8,"index"],[187,10,219,8,"index"],[187,15,219,13],[187,17,219,8,"index"],[188,0,214,6],[189,0,221,5],[189,7,101,3],[190,0,223,4,"getStateForRouteFocus"],[190,6,223,4,"getStateForRouteFocus"],[190,27,101,3],[190,60,223,26,"state"],[190,65,101,3],[190,67,223,33,"key"],[190,70,101,3],[190,72,223,38],[191,0,224,6],[191,12,224,12,"index"],[191,17,224,17],[191,20,224,20,"state"],[191,25,224,25],[191,26,224,26,"routes"],[191,32,224,20],[191,33,224,33,"findIndex"],[191,42,224,20],[191,43,224,43],[191,53,224,43,"r"],[191,54,224,44],[192,0,224,44],[192,17,224,48,"r"],[192,18,224,49],[192,19,224,50,"key"],[192,22,224,48],[192,27,224,58,"key"],[192,30,224,44],[193,0,224,44],[193,9,224,20],[193,10,224,6],[195,0,226,6],[195,12,226,10,"index"],[195,17,226,15],[195,22,226,20],[195,23,226,21],[195,24,226,10],[195,28,226,26,"index"],[195,33,226,31],[195,38,226,36,"state"],[195,43,226,41],[195,44,226,42,"index"],[195,49,226,6],[195,51,226,49],[196,0,227,8],[196,17,227,15,"state"],[196,22,227,8],[197,0,228,7],[199,0,230,6],[199,15,230,13,"changeIndex"],[199,26,230,24],[199,27,230,25,"state"],[199,32,230,24],[199,34,230,32,"index"],[199,39,230,24],[199,41,230,39,"backBehavior"],[199,53,230,24],[199,54,230,6],[200,0,231,5],[200,7,101,3],[201,0,233,4,"getStateForAction"],[201,6,233,4,"getStateForAction"],[201,23,101,3],[201,52,233,22,"state"],[201,57,101,3],[201,59,233,29,"action"],[201,65,101,3],[201,67,233,37],[202,0,234,6],[202,16,234,14,"action"],[202,22,234,20],[202,23,234,21,"type"],[202,27,234,6],[203,0,235,8],[203,15,235,13],[203,24,235,8],[204,0,236,8],[204,15,236,13],[204,25,236,8],[205,0,236,25],[206,0,237,10],[206,18,237,14,"index"],[206,23,237,19],[206,26,237,22],[206,27,237,23],[206,28,237,10],[208,0,239,10],[208,18,239,14,"action"],[208,24,239,20],[208,25,239,21,"type"],[208,29,239,14],[208,34,239,30],[208,44,239,14],[208,48,239,44,"action"],[208,54,239,50],[208,55,239,51,"payload"],[208,62,239,44],[208,63,239,59,"key"],[208,66,239,10],[208,68,239,64],[209,0,240,12,"index"],[209,16,240,12,"index"],[209,21,240,17],[209,24,240,20,"state"],[209,29,240,25],[209,30,240,26,"routes"],[209,36,240,20],[209,37,240,33,"findIndex"],[209,46,240,20],[209,47,241,14],[209,57,241,14,"route"],[209,62,241,19],[210,0,241,19],[210,25,241,23,"route"],[210,30,241,28],[210,31,241,29,"key"],[210,34,241,23],[210,39,241,37,"action"],[210,45,241,43],[210,46,241,44,"payload"],[210,53,241,37],[210,54,241,52,"key"],[210,57,241,19],[211,0,241,19],[211,17,240,20],[211,18,240,12],[212,0,243,11],[212,15,239,10],[212,21,243,17],[213,0,244,12,"index"],[213,16,244,12,"index"],[213,21,244,17],[213,24,244,20,"state"],[213,29,244,25],[213,30,244,26,"routes"],[213,36,244,20],[213,37,244,33,"findIndex"],[213,46,244,20],[213,47,245,14],[213,57,245,14,"route"],[213,62,245,19],[214,0,245,19],[214,25,245,23,"route"],[214,30,245,28],[214,31,245,29,"name"],[214,35,245,23],[214,40,245,38,"action"],[214,46,245,44],[214,47,245,45,"payload"],[214,54,245,38],[214,55,245,53,"name"],[214,59,245,19],[215,0,245,19],[215,17,244,20],[215,18,244,12],[216,0,247,11],[218,0,249,10],[218,18,249,14,"index"],[218,23,249,19],[218,28,249,24],[218,29,249,25],[218,30,249,10],[218,32,249,28],[219,0,250,12],[219,23,250,19],[219,27,250,12],[220,0,251,11],[222,0,253,10],[222,21,253,17,"changeIndex"],[222,32,253,28],[222,51,255,17,"state"],[222,56,253,28],[223,0,256,14,"routes"],[223,16,256,14,"routes"],[223,22,256,20],[223,24,257,16,"action"],[223,30,257,22],[223,31,257,23,"payload"],[223,38,257,16],[223,39,257,31,"params"],[223,45,257,16],[223,50,257,42,"undefined"],[223,59,257,16],[223,62,258,20,"state"],[223,67,258,25],[223,68,258,26,"routes"],[223,74,258,20],[223,75,258,33,"map"],[223,78,258,20],[223,79,258,37],[223,89,258,38,"route"],[223,94,258,37],[223,96,258,45,"i"],[223,97,258,37],[224,0,258,37],[224,25,259,22,"i"],[224,26,259,23],[224,31,259,28,"index"],[224,36,259,22],[224,57,261,31,"route"],[224,62,259,22],[225,0,262,28,"params"],[225,20,262,28,"params"],[225,26,262,34],[225,46,263,33,"route"],[225,51,263,38],[225,52,263,39,"params"],[225,58,262,34],[225,64,264,33,"action"],[225,70,264,39],[225,71,264,40,"payload"],[225,78,264,33],[225,79,264,48,"params"],[225,85,262,34],[226,0,259,22],[226,23,267,26,"route"],[226,28,258,37],[227,0,258,37],[227,17,258,20],[227,18,257,16],[227,21,269,20,"state"],[227,26,269,25],[227,27,269,26,"routes"],[228,0,253,28],[228,18,271,12,"index"],[228,23,253,28],[228,25,272,12,"backBehavior"],[228,37,253,28],[228,38,253,10],[229,0,274,9],[231,0,276,8],[231,15,276,13],[231,24,276,8],[232,0,276,24],[233,0,277,10],[233,18,277,14,"state"],[233,23,277,19],[233,24,277,20,"history"],[233,31,277,14],[233,32,277,28,"length"],[233,38,277,14],[233,43,277,39],[233,44,277,10],[233,46,277,42],[234,0,278,12],[234,23,278,19],[234,27,278,12],[235,0,279,11],[237,0,281,10],[237,18,281,16,"previousKey"],[237,29,281,27],[237,32,281,30,"state"],[237,37,281,35],[237,38,281,36,"history"],[237,45,281,30],[237,46,281,44,"state"],[237,51,281,49],[237,52,281,50,"history"],[237,59,281,44],[237,60,281,58,"length"],[237,66,281,44],[237,69,281,67],[237,70,281,30],[237,72,281,70,"key"],[237,75,281,10],[239,0,282,10],[239,18,282,16,"index"],[239,24,282,21],[239,27,282,24,"state"],[239,32,282,29],[239,33,282,30,"routes"],[239,39,282,24],[239,40,282,37,"findIndex"],[239,49,282,24],[239,50,283,12],[239,60,283,12,"route"],[239,65,283,17],[240,0,283,17],[240,23,283,21,"route"],[240,28,283,26],[240,29,283,27,"key"],[240,32,283,21],[240,37,283,35,"previousKey"],[240,48,283,17],[241,0,283,17],[241,15,282,24],[241,16,282,10],[243,0,286,10],[243,18,286,14,"index"],[243,24,286,19],[243,29,286,24],[243,30,286,25],[243,31,286,10],[243,33,286,28],[244,0,287,12],[244,23,287,19],[244,27,287,12],[245,0,288,11],[247,0,290,10],[247,39,291,15,"state"],[247,44,290,10],[248,0,292,12,"history"],[248,16,292,12,"history"],[248,23,292,19],[248,25,292,21,"state"],[248,30,292,26],[248,31,292,27,"history"],[248,38,292,21],[248,39,292,35,"slice"],[248,44,292,21],[248,45,292,41],[248,46,292,21],[248,48,292,44],[248,49,292,45],[248,50,292,21],[248,51,290,10],[249,0,293,12,"index"],[249,16,293,12,"index"],[249,21,293,17],[249,23,293,12,"index"],[250,0,290,10],[251,0,295,9],[253,0,297,8],[254,0,298,10],[254,19,298,17,"BaseRouter"],[254,39,298,28,"getStateForAction"],[254,56,298,17],[254,57,298,46,"state"],[254,62,298,17],[254,64,298,53,"action"],[254,70,298,17],[254,71,298,10],[255,0,234,6],[256,0,300,5],[256,7,101,3],[257,0,302,4,"shouldActionChangeFocus"],[257,6,302,4,"shouldActionChangeFocus"],[257,29,101,3],[257,64,302,28,"action"],[257,70,101,3],[257,72,302,36],[258,0,303,6],[258,15,303,13,"action"],[258,21,303,19],[258,22,303,20,"type"],[258,26,303,13],[258,31,303,29],[258,41,303,6],[259,0,304,5],[259,7,101,3],[260,0,306,4,"actionCreators"],[260,6,306,4,"actionCreators"],[260,20,306,18],[260,22,306,20,"TabActions"],[261,0,101,3],[261,6,98,2],[263,0,309,2],[263,11,309,9,"router"],[263,17,309,2],[264,0,310,1]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","changeIndex","state.history.filter$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","routes.find$argument_0","<anonymous>","router.getStateForRouteNamesChange","state.routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","router.shouldActionChangeFocus"],"mappings":"AAA;ECsC;GDE;wBEG;CFwB;oBGE;cCW,2DD;CHW;eKE;ICY;oCCM;QDI;KDa;IGE;oCDO;UEE,oBF;OCoB;0CEY;oBDC,qBC,CF;KHgB;IME;QJE;4BKC,oBL;WII;yCPQ;oBKC,qBL,CO;KNc;IQE;2CCC,kBD;KRO;IUE;cDQ,yCC;cDI,2CC;qCCa;+BDS;YDgB,kCC;KViB;IYE;KZE;CLM"}},"type":"js/module"}]}