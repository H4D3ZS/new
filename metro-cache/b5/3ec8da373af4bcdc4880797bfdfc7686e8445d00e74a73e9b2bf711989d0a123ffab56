{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"shortid","data":{"isAsync":false}},{"name":"./TabRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = DrawerRouter;\n  exports.DrawerActions = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _shortid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"shortid\"));\n\n  var _TabRouter = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"./TabRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var DrawerActions = _objectSpread({}, _TabRouter.TabActions, {\n    openDrawer: function openDrawer() {\n      return {\n        type: 'OPEN_DRAWER'\n      };\n    },\n    closeDrawer: function closeDrawer() {\n      return {\n        type: 'CLOSE_DRAWER'\n      };\n    },\n    toggleDrawer: function toggleDrawer() {\n      return {\n        type: 'TOGGLE_DRAWER'\n      };\n    }\n  });\n\n  exports.DrawerActions = DrawerActions;\n\n  var isDrawerOpen = function isDrawerOpen(state) {\n    var _state$history;\n\n    return Boolean((_state$history = state.history) == null ? void 0 : _state$history.find(function (it) {\n      return it.type === 'drawer';\n    }));\n  };\n\n  var openDrawer = function openDrawer(state) {\n    if (isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread({}, state, {\n      history: [].concat((0, _toConsumableArray2.default)(state.history), [{\n        type: 'drawer'\n      }])\n    });\n  };\n\n  var closeDrawer = function closeDrawer(state) {\n    if (!isDrawerOpen(state)) {\n      return state;\n    }\n\n    return _objectSpread({}, state, {\n      history: state.history.filter(function (it) {\n        return it.type !== 'drawer';\n      })\n    });\n  };\n\n  function DrawerRouter(options) {\n    var router = (0, _TabRouter.default)(options);\n    return _objectSpread({}, router, {\n      type: 'drawer',\n      getInitialState: function getInitialState(_ref) {\n        var routeNames = _ref.routeNames,\n            routeParamList = _ref.routeParamList;\n        var state = router.getInitialState({\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        });\n        return _objectSpread({}, state, {\n          stale: false,\n          type: 'drawer',\n          key: \"drawer-\" + (0, _shortid.default)()\n        });\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n\n        if (partialState.stale === false) {\n          return partialState;\n        }\n\n        var state = router.getRehydratedState(partialState, {\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        });\n\n        if (isDrawerOpen(partialState)) {\n          state = openDrawer(state);\n        }\n\n        return _objectSpread({}, state, {\n          type: 'drawer',\n          key: \"drawer-\" + (0, _shortid.default)()\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var result = router.getStateForRouteFocus(state, key);\n        return closeDrawer(result);\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        switch (action.type) {\n          case 'OPEN_DRAWER':\n            return openDrawer(state);\n\n          case 'CLOSE_DRAWER':\n            return closeDrawer(state);\n\n          case 'TOGGLE_DRAWER':\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n\n            return openDrawer(state);\n\n          case 'GO_BACK':\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n\n            return router.getStateForAction(state, action, options);\n\n          default:\n            return router.getStateForAction(state, action, options);\n        }\n      },\n      actionCreators: DrawerActions\n    });\n  }\n});","lineCount":148,"map":[[16,0,1,0],[18,0,3,0],[24,0,34,7],[24,6,34,13,"DrawerActions"],[24,19,34,26],[24,40,35,5,"TabActions"],[24,61,34,26],[25,0,36,2,"openDrawer"],[25,4,36,2,"openDrawer"],[25,14,34,26],[25,38,36,33],[26,0,37,4],[26,13,37,11],[27,0,37,13,"type"],[27,8,37,13,"type"],[27,12,37,17],[27,14,37,19],[28,0,37,11],[28,7,37,4],[29,0,38,3],[29,5,34,26],[30,0,39,2,"closeDrawer"],[30,4,39,2,"closeDrawer"],[30,15,34,26],[30,40,39,34],[31,0,40,4],[31,13,40,11],[32,0,40,13,"type"],[32,8,40,13,"type"],[32,12,40,17],[32,14,40,19],[33,0,40,11],[33,7,40,4],[34,0,41,3],[34,5,34,26],[35,0,42,2,"toggleDrawer"],[35,4,42,2,"toggleDrawer"],[35,16,34,26],[35,42,42,35],[36,0,43,4],[36,13,43,11],[37,0,43,13,"type"],[37,8,43,13,"type"],[37,12,43,17],[37,14,43,19],[38,0,43,11],[38,7,43,4],[39,0,44,3],[40,0,34,26],[40,4,34,7],[44,0,47,0],[44,6,47,6,"isDrawerOpen"],[44,18,47,18],[44,21,47,21],[44,30,47,6,"isDrawerOpen"],[44,42,47,21],[44,43,48,2,"state"],[44,48,47,21],[45,0,47,21],[47,0,47,21],[47,11,49,5,"Boolean"],[47,18,49,12],[47,37,49,13,"state"],[47,42,49,18],[47,43,49,19,"history"],[47,50,49,12],[47,71,49,13],[47,86,49,28,"find"],[47,90,49,13],[47,91,49,33],[47,101,49,33,"it"],[47,103,49,35],[48,0,49,35],[48,13,49,39,"it"],[48,15,49,41],[48,16,49,42,"type"],[48,20,49,39],[48,25,49,51],[48,33,49,35],[49,0,49,35],[49,5,49,13],[49,6,49,12],[49,7,47,21],[50,0,47,21],[50,3,47,0],[52,0,51,0],[52,6,51,6,"openDrawer"],[52,16,51,16],[52,19,51,19],[52,28,51,6,"openDrawer"],[52,38,51,19],[52,39,51,20,"state"],[52,44,51,19],[52,46,51,76],[53,0,52,2],[53,8,52,6,"isDrawerOpen"],[53,20,52,18],[53,21,52,19,"state"],[53,26,52,18],[53,27,52,2],[53,29,52,27],[54,0,53,4],[54,13,53,11,"state"],[54,18,53,4],[55,0,54,3],[57,0,56,2],[57,29,57,7,"state"],[57,34,56,2],[58,0,58,4,"history"],[58,6,58,4,"history"],[58,13,58,11],[58,58,58,17,"state"],[58,63,58,22],[58,64,58,23,"history"],[58,71,58,11],[58,75,58,32],[59,0,58,34,"type"],[59,8,58,34,"type"],[59,12,58,38],[59,14,58,40],[60,0,58,32],[60,7,58,11],[61,0,56,2],[62,0,60,1],[62,3,51,0],[64,0,62,0],[64,6,62,6,"closeDrawer"],[64,17,62,17],[64,20,62,20],[64,29,62,6,"closeDrawer"],[64,40,62,20],[64,41,62,21,"state"],[64,46,62,20],[64,48,62,77],[65,0,63,2],[65,8,63,6],[65,9,63,7,"isDrawerOpen"],[65,21,63,19],[65,22,63,20,"state"],[65,27,63,19],[65,28,63,2],[65,30,63,28],[66,0,64,4],[66,13,64,11,"state"],[66,18,64,4],[67,0,65,3],[69,0,67,2],[69,29,68,7,"state"],[69,34,67,2],[70,0,69,4,"history"],[70,6,69,4,"history"],[70,13,69,11],[70,15,69,13,"state"],[70,20,69,18],[70,21,69,19,"history"],[70,28,69,13],[70,29,69,27,"filter"],[70,35,69,13],[70,36,69,34],[70,46,69,34,"it"],[70,48,69,36],[71,0,69,36],[71,15,69,40,"it"],[71,17,69,42],[71,18,69,43,"type"],[71,22,69,40],[71,27,69,52],[71,35,69,36],[72,0,69,36],[72,7,69,13],[73,0,67,2],[74,0,71,1],[74,3,62,0],[76,0,73,15],[76,11,73,24,"DrawerRouter"],[76,23,73,15],[76,24,74,2,"options"],[76,31,73,15],[76,33,75,76],[77,0,76,2],[77,8,76,8,"router"],[77,14,76,14],[77,17,76,18],[77,41,76,28,"options"],[77,48,76,18],[77,49,76,2],[78,0,81,2],[78,29,82,7,"router"],[78,35,81,2],[79,0,84,4,"type"],[79,6,84,4,"type"],[79,10,84,8],[79,12,84,10],[79,20,81,2],[80,0,86,4,"getInitialState"],[80,6,86,4,"getInitialState"],[80,21,81,2],[80,54,86,52],[81,0,86,52],[81,12,86,22,"routeNames"],[81,22,86,52],[81,30,86,22,"routeNames"],[81,40,86,52],[82,0,86,52],[82,12,86,34,"routeParamList"],[82,26,86,52],[82,34,86,34,"routeParamList"],[82,48,86,52],[83,0,87,6],[83,12,87,12,"state"],[83,17,87,17],[83,20,87,20,"router"],[83,26,87,26],[83,27,87,27,"getInitialState"],[83,42,87,20],[83,43,87,43],[84,0,87,45,"routeNames"],[84,10,87,45,"routeNames"],[84,20,87,55],[84,22,87,45,"routeNames"],[84,32,87,43],[85,0,87,57,"routeParamList"],[85,10,87,57,"routeParamList"],[85,24,87,71],[85,26,87,57,"routeParamList"],[86,0,87,43],[86,9,87,20],[86,10,87,6],[87,0,89,6],[87,33,90,11,"state"],[87,38,89,6],[88,0,91,8,"stale"],[88,10,91,8,"stale"],[88,15,91,13],[88,17,91,15],[88,22,89,6],[89,0,92,8,"type"],[89,10,92,8,"type"],[89,14,92,12],[89,16,92,14],[89,24,89,6],[90,0,93,8,"key"],[90,10,93,8,"key"],[90,13,93,11],[90,27,93,23],[91,0,89,6],[92,0,95,5],[92,7,81,2],[93,0,97,4,"getRehydratedState"],[93,6,97,4,"getRehydratedState"],[93,24,81,2],[93,54,97,23,"partialState"],[93,66,81,2],[93,75,97,69],[94,0,97,69],[94,12,97,39,"routeNames"],[94,22,97,69],[94,31,97,39,"routeNames"],[94,41,97,69],[95,0,97,69],[95,12,97,51,"routeParamList"],[95,26,97,69],[95,35,97,51,"routeParamList"],[95,49,97,69],[97,0,98,6],[97,12,98,10,"partialState"],[97,24,98,22],[97,25,98,23,"stale"],[97,30,98,10],[97,35,98,33],[97,40,98,6],[97,42,98,40],[98,0,99,8],[98,17,99,15,"partialState"],[98,29,99,8],[99,0,100,7],[101,0,102,6],[101,12,102,10,"state"],[101,17,102,15],[101,20,102,18,"router"],[101,26,102,24],[101,27,102,25,"getRehydratedState"],[101,45,102,18],[101,46,102,44,"partialState"],[101,58,102,18],[101,60,102,58],[102,0,103,8,"routeNames"],[102,10,103,8,"routeNames"],[102,20,103,18],[102,22,103,8,"routeNames"],[102,32,102,58],[103,0,104,8,"routeParamList"],[103,10,104,8,"routeParamList"],[103,24,104,22],[103,26,104,8,"routeParamList"],[104,0,102,58],[104,9,102,18],[104,10,102,6],[106,0,107,6],[106,12,107,10,"isDrawerOpen"],[106,24,107,22],[106,25,107,23,"partialState"],[106,37,107,22],[106,38,107,6],[106,40,107,38],[107,0,108,8,"state"],[107,10,108,8,"state"],[107,15,108,13],[107,18,108,16,"openDrawer"],[107,28,108,26],[107,29,108,27,"state"],[107,34,108,26],[107,35,108,8],[108,0,109,7],[110,0,111,6],[110,33,112,11,"state"],[110,38,111,6],[111,0,113,8,"type"],[111,10,113,8,"type"],[111,14,113,12],[111,16,113,14],[111,24,111,6],[112,0,114,8,"key"],[112,10,114,8,"key"],[112,13,114,11],[112,27,114,23],[113,0,111,6],[114,0,116,5],[114,7,81,2],[115,0,118,4,"getStateForRouteFocus"],[115,6,118,4,"getStateForRouteFocus"],[115,27,81,2],[115,60,118,26,"state"],[115,65,81,2],[115,67,118,33,"key"],[115,70,81,2],[115,72,118,38],[116,0,119,6],[116,12,119,12,"result"],[116,18,119,18],[116,21,119,21,"router"],[116,27,119,27],[116,28,119,28,"getStateForRouteFocus"],[116,49,119,21],[116,50,119,50,"state"],[116,55,119,21],[116,57,119,57,"key"],[116,60,119,21],[116,61,119,6],[117,0,121,6],[117,15,121,13,"closeDrawer"],[117,26,121,24],[117,27,121,25,"result"],[117,33,121,24],[117,34,121,6],[118,0,122,5],[118,7,81,2],[119,0,124,4,"getStateForAction"],[119,6,124,4,"getStateForAction"],[119,23,81,2],[119,52,124,22,"state"],[119,57,81,2],[119,59,124,29,"action"],[119,65,81,2],[119,67,124,37,"options"],[119,74,81,2],[119,76,124,46],[120,0,125,6],[120,16,125,14,"action"],[120,22,125,20],[120,23,125,21,"type"],[120,27,125,6],[121,0,126,8],[121,15,126,13],[121,28,126,8],[122,0,127,10],[122,19,127,17,"openDrawer"],[122,29,127,27],[122,30,127,28,"state"],[122,35,127,27],[122,36,127,10],[124,0,129,8],[124,15,129,13],[124,29,129,8],[125,0,130,10],[125,19,130,17,"closeDrawer"],[125,30,130,28],[125,31,130,29,"state"],[125,36,130,28],[125,37,130,10],[127,0,132,8],[127,15,132,13],[127,30,132,8],[128,0,133,10],[128,16,133,14,"isDrawerOpen"],[128,28,133,26],[128,29,133,27,"state"],[128,34,133,26],[128,35,133,10],[128,37,133,35],[129,0,134,12],[129,21,134,19,"closeDrawer"],[129,32,134,30],[129,33,134,31,"state"],[129,38,134,30],[129,39,134,12],[130,0,135,11],[132,0,137,10],[132,19,137,17,"openDrawer"],[132,29,137,27],[132,30,137,28,"state"],[132,35,137,27],[132,36,137,10],[134,0,139,8],[134,15,139,13],[134,24,139,8],[135,0,140,10],[135,16,140,14,"isDrawerOpen"],[135,28,140,26],[135,29,140,27,"state"],[135,34,140,26],[135,35,140,10],[135,37,140,35],[136,0,141,12],[136,21,141,19,"closeDrawer"],[136,32,141,30],[136,33,141,31,"state"],[136,38,141,30],[136,39,141,12],[137,0,142,11],[139,0,144,10],[139,19,144,17,"router"],[139,25,144,23],[139,26,144,24,"getStateForAction"],[139,43,144,17],[139,44,144,42,"state"],[139,49,144,17],[139,51,144,49,"action"],[139,57,144,17],[139,59,144,57,"options"],[139,66,144,17],[139,67,144,10],[141,0,146,8],[142,0,147,10],[142,19,147,17,"router"],[142,25,147,23],[142,26,147,24,"getStateForAction"],[142,43,147,17],[142,44,147,42,"state"],[142,49,147,17],[142,51,147,49,"action"],[142,57,147,17],[142,59,147,57,"options"],[142,66,147,17],[142,67,147,10],[143,0,125,6],[144,0,149,5],[144,7,81,2],[145,0,151,4,"actionCreators"],[145,6,151,4,"actionCreators"],[145,20,151,18],[145,22,151,20,"DrawerActions"],[146,0,81,2],[147,0,153,1]],"functionMap":{"names":["<global>","DrawerActions.openDrawer","DrawerActions.closeDrawer","DrawerActions.toggleDrawer","isDrawerOpen","<anonymous>","openDrawer","closeDrawer","state.history.filter$argument_0","DrawerRouter","getInitialState","getRehydratedState","getStateForRouteFocus","getStateForAction"],"mappings":"AAA;ECmC;GDE;EEC;GFE;EGC;GHE;qBIG;iCCE,0BD,EJ;mBME;CNS;oBOE;kCCO,0BD;CPE;eSE;ICa;KDS;IEE;KFmB;IGE;KHI;IIE;KJyB;CTI"}},"type":"js/module"}]}