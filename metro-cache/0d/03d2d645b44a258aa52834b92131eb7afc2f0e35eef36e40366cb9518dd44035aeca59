{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"shortid","data":{"isAsync":false}},{"name":"./BaseRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = StackRouter;\n  exports.StackActions = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _shortid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"shortid\"));\n\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./BaseRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var StackActions = {\n    replace: function replace(name, params) {\n      return {\n        type: 'REPLACE',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    push: function push(name, params) {\n      return {\n        type: 'PUSH',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    },\n    pop: function pop() {\n      var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return {\n        type: 'POP',\n        payload: {\n          count: count\n        }\n      };\n    },\n    popToTop: function popToTop() {\n      return {\n        type: 'POP_TO_TOP'\n      };\n    }\n  };\n  exports.StackActions = StackActions;\n\n  function StackRouter(options) {\n    var router = _objectSpread({}, _BaseRouter.default, {\n      type: 'stack',\n      getInitialState: function getInitialState(_ref) {\n        var routeNames = _ref.routeNames,\n            routeParamList = _ref.routeParamList;\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        return {\n          stale: false,\n          type: 'stack',\n          key: \"stack-\" + (0, _shortid.default)(),\n          index: 0,\n          routeNames: routeNames,\n          routes: [{\n            key: initialRouteName + \"-\" + (0, _shortid.default)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          }]\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var state = partialState;\n\n        if (state.stale === false) {\n          return state;\n        }\n\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        }).map(function (route) {\n          return _objectSpread({}, route, {\n            key: route.key || route.name + \"-\" + (0, _shortid.default)(),\n            params: routeParamList[route.name] !== undefined ? _objectSpread({}, routeParamList[route.name], {}, route.params) : route.params\n          });\n        });\n\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: initialRouteName + \"-\" + (0, _shortid.default)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n\n        return {\n          stale: false,\n          type: 'stack',\n          key: \"stack-\" + (0, _shortid.default)(),\n          index: routes.length - 1,\n          routeNames: routeNames,\n          routes: routes\n        };\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n        var routes = state.routes.filter(function (route) {\n          return routeNames.includes(route.name);\n        });\n\n        if (routes.length === 0) {\n          var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n          routes.push({\n            key: initialRouteName + \"-\" + (0, _shortid.default)(),\n            name: initialRouteName,\n            params: routeParamList[initialRouteName]\n          });\n        }\n\n        return _objectSpread({}, state, {\n          routeNames: routeNames,\n          routes: routes,\n          index: Math.min(state.index, routes.length - 1)\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n\n        return _objectSpread({}, state, {\n          index: index,\n          routes: state.routes.slice(0, index + 1)\n        });\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        var routeParamList = options.routeParamList;\n\n        switch (action.type) {\n          case 'REPLACE':\n            {\n              var index = action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n\n              if (index === -1) {\n                return null;\n              }\n\n              var _action$payload = action.payload,\n                  name = _action$payload.name,\n                  key = _action$payload.key,\n                  params = _action$payload.params;\n\n              if (!state.routeNames.includes(name)) {\n                return null;\n              }\n\n              return _objectSpread({}, state, {\n                routes: state.routes.map(function (route, i) {\n                  return i === index ? {\n                    key: key !== undefined ? key : name + \"-\" + (0, _shortid.default)(),\n                    name: name,\n                    params: routeParamList[name] !== undefined ? _objectSpread({}, routeParamList[name], {}, params) : params\n                  } : route;\n                })\n              });\n            }\n\n          case 'PUSH':\n            if (state.routeNames.includes(action.payload.name)) {\n              return _objectSpread({}, state, {\n                index: state.index + 1,\n                routes: [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                  key: action.payload.key === undefined ? action.payload.name + \"-\" + (0, _shortid.default)() : action.payload.key,\n                  name: action.payload.name,\n                  params: routeParamList[action.payload.name] !== undefined ? _objectSpread({}, routeParamList[action.payload.name], {}, action.payload.params) : action.payload.params\n                }])\n              });\n            }\n\n            return null;\n\n          case 'POP':\n            {\n              var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n                return r.key === action.source;\n              }) : state.index;\n\n              if (_index > 0) {\n                var count = Math.max(_index - action.payload.count + 1, 1);\n                var routes = state.routes.slice(0, count).concat(state.routes.slice(_index + 1));\n                return _objectSpread({}, state, {\n                  index: routes.length - 1,\n                  routes: routes\n                });\n              }\n\n              return null;\n            }\n\n          case 'POP_TO_TOP':\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: state.routes.length - 1\n              }\n            }, options);\n\n          case 'NAVIGATE':\n            if (action.payload.key || action.payload.name && state.routeNames.includes(action.payload.name)) {\n              var _index2 = -1;\n\n              if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n                _index2 = state.index;\n              } else {\n                for (var i = state.routes.length - 1; i >= 0; i--) {\n                  if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                    _index2 = i;\n                    break;\n                  }\n                }\n              }\n\n              if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n                return null;\n              }\n\n              if (_index2 === -1 && action.payload.name !== undefined) {\n                return router.getStateForAction(state, {\n                  type: 'PUSH',\n                  payload: {\n                    key: action.payload.key,\n                    name: action.payload.name,\n                    params: action.payload.params\n                  }\n                }, options);\n              }\n\n              return _objectSpread({}, state, {\n                index: _index2,\n                routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [action.payload.params !== undefined ? _objectSpread({}, state.routes[_index2], {\n                  params: _objectSpread({}, state.routes[_index2].params, {}, action.payload.params)\n                }) : state.routes[_index2]])\n              });\n            }\n\n            return null;\n\n          case 'GO_BACK':\n            if (state.index > 0) {\n              return router.getStateForAction(state, {\n                type: 'POP',\n                payload: {\n                  count: 1\n                },\n                target: action.target,\n                source: action.source\n              }, options);\n            }\n\n            return null;\n\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      actionCreators: StackActions\n    });\n\n    return router;\n  }\n});","lineCount":287,"map":[[14,0,1,0],[16,0,2,0],[22,0,45,7],[22,6,45,13,"StackActions"],[22,18,45,25],[22,21,45,28],[23,0,46,2,"replace"],[23,4,46,2,"replace"],[23,11,45,28],[23,30,46,10,"name"],[23,34,45,28],[23,36,46,24,"params"],[23,42,45,28],[23,44,46,58],[24,0,47,4],[24,13,47,11],[25,0,47,13,"type"],[25,8,47,13,"type"],[25,12,47,17],[25,14,47,19],[25,23,47,11],[26,0,47,30,"payload"],[26,8,47,30,"payload"],[26,15,47,37],[26,17,47,39],[27,0,47,41,"name"],[27,10,47,41,"name"],[27,14,47,45],[27,16,47,41,"name"],[27,20,47,39],[28,0,47,47,"params"],[28,10,47,47,"params"],[28,16,47,53],[28,18,47,47,"params"],[29,0,47,39],[30,0,47,11],[30,7,47,4],[31,0,48,3],[31,5,45,28],[32,0,49,2,"push"],[32,4,49,2,"push"],[32,8,45,28],[32,24,49,7,"name"],[32,28,45,28],[32,30,49,21,"params"],[32,36,45,28],[32,38,49,55],[33,0,50,4],[33,13,50,11],[34,0,50,13,"type"],[34,8,50,13,"type"],[34,12,50,17],[34,14,50,19],[34,20,50,11],[35,0,50,27,"payload"],[35,8,50,27,"payload"],[35,15,50,34],[35,17,50,36],[36,0,50,38,"name"],[36,10,50,38,"name"],[36,14,50,42],[36,16,50,38,"name"],[36,20,50,36],[37,0,50,44,"params"],[37,10,50,44,"params"],[37,16,50,50],[37,18,50,44,"params"],[38,0,50,36],[39,0,50,11],[39,7,50,4],[40,0,51,3],[40,5,45,28],[41,0,52,2,"pop"],[41,4,52,2,"pop"],[41,7,45,28],[41,24,52,42],[42,0,52,42],[42,10,52,6,"count"],[42,15,52,42],[42,86,52,22],[42,87,52,42],[43,0,53,4],[43,13,53,11],[44,0,53,13,"type"],[44,8,53,13,"type"],[44,12,53,17],[44,14,53,19],[44,19,53,11],[45,0,53,26,"payload"],[45,8,53,26,"payload"],[45,15,53,33],[45,17,53,35],[46,0,53,37,"count"],[46,10,53,37,"count"],[46,15,53,42],[46,17,53,37,"count"],[47,0,53,35],[48,0,53,11],[48,7,53,4],[49,0,54,3],[49,5,45,28],[50,0,55,2,"popToTop"],[50,4,55,2,"popToTop"],[50,12,45,28],[50,34,55,30],[51,0,56,4],[51,13,56,11],[52,0,56,13,"type"],[52,8,56,13,"type"],[52,12,56,17],[52,14,56,19],[53,0,56,11],[53,7,56,4],[54,0,57,3],[55,0,45,28],[55,3,45,7],[58,0,60,15],[58,11,60,24,"StackRouter"],[58,22,60,15],[58,23,60,36,"options"],[58,30,60,15],[58,32,60,65],[59,0,61,2],[59,8,61,8,"router"],[59,14,64,3],[59,35,65,7,"BaseRouter"],[59,54,64,3],[60,0,67,4,"type"],[60,6,67,4,"type"],[60,10,67,8],[60,12,67,10],[60,19,64,3],[61,0,69,4,"getInitialState"],[61,6,69,4,"getInitialState"],[61,21,64,3],[61,54,69,52],[62,0,69,52],[62,12,69,22,"routeNames"],[62,22,69,52],[62,30,69,22,"routeNames"],[62,40,69,52],[63,0,69,52],[63,12,69,34,"routeParamList"],[63,26,69,52],[63,34,69,34,"routeParamList"],[63,48,69,52],[64,0,70,6],[64,12,70,12,"initialRouteName"],[64,28,70,28],[64,31,71,8,"options"],[64,38,71,15],[64,39,71,16,"initialRouteName"],[64,55,71,8],[64,60,71,37,"undefined"],[64,69,71,8],[64,73,72,8,"routeNames"],[64,83,72,18],[64,84,72,19,"includes"],[64,92,72,8],[64,93,72,28,"options"],[64,100,72,35],[64,101,72,36,"initialRouteName"],[64,117,72,8],[64,118,71,8],[64,121,73,12,"options"],[64,128,73,19],[64,129,73,20,"initialRouteName"],[64,145,71,8],[64,148,74,12,"routeNames"],[64,158,74,22],[64,159,74,23],[64,160,74,22],[64,161,70,6],[65,0,76,6],[65,15,76,13],[66,0,77,8,"stale"],[66,10,77,8,"stale"],[66,15,77,13],[66,17,77,15],[66,22,76,13],[67,0,78,8,"type"],[67,10,78,8,"type"],[67,14,78,12],[67,16,78,14],[67,23,76,13],[68,0,79,8,"key"],[68,10,79,8,"key"],[68,13,79,11],[68,26,79,22],[68,49,76,13],[69,0,80,8,"index"],[69,10,80,8,"index"],[69,15,80,13],[69,17,80,15],[69,18,76,13],[70,0,81,8,"routeNames"],[70,10,81,8,"routeNames"],[70,20,81,18],[70,22,81,8,"routeNames"],[70,32,76,13],[71,0,82,8,"routes"],[71,10,82,8,"routes"],[71,16,82,14],[71,18,82,16],[71,19,83,10],[72,0,84,12,"key"],[72,12,84,12,"key"],[72,15,84,15],[72,17,84,20,"initialRouteName"],[72,33,84,15],[72,42,84,40],[72,65,83,10],[73,0,85,12,"name"],[73,12,85,12,"name"],[73,16,85,16],[73,18,85,18,"initialRouteName"],[73,34,83,10],[74,0,86,12,"params"],[74,12,86,12,"params"],[74,18,86,18],[74,20,86,20,"routeParamList"],[74,34,86,34],[74,35,86,35,"initialRouteName"],[74,51,86,34],[75,0,83,10],[75,11,82,16],[76,0,76,13],[76,9,76,6],[77,0,90,5],[77,7,64,3],[78,0,92,4,"getRehydratedState"],[78,6,92,4,"getRehydratedState"],[78,24,64,3],[78,54,92,23,"partialState"],[78,66,64,3],[78,75,92,69],[79,0,92,69],[79,12,92,39,"routeNames"],[79,22,92,69],[79,31,92,39,"routeNames"],[79,41,92,69],[80,0,92,69],[80,12,92,51,"routeParamList"],[80,26,92,69],[80,35,92,51,"routeParamList"],[80,49,92,69],[81,0,93,6],[81,12,93,10,"state"],[81,17,93,15],[81,20,93,18,"partialState"],[81,32,93,6],[83,0,95,6],[83,12,95,10,"state"],[83,17,95,15],[83,18,95,16,"stale"],[83,23,95,10],[83,28,95,26],[83,33,95,6],[83,35,95,33],[84,0,96,8],[84,17,96,15,"state"],[84,22,96,8],[85,0,97,7],[87,0,99,6],[87,12,99,12,"routes"],[87,18,99,18],[87,21,99,21,"state"],[87,26,99,26],[87,27,99,27,"routes"],[87,33,99,21],[87,34,100,9,"filter"],[87,40,99,21],[87,41,100,16],[87,51,100,16,"route"],[87,56,100,21],[88,0,100,21],[88,17,100,25,"routeNames"],[88,27,100,35],[88,28,100,36,"includes"],[88,36,100,25],[88,37,100,45,"route"],[88,42,100,50],[88,43,100,51,"name"],[88,47,100,25],[88,48,100,21],[89,0,100,21],[89,9,99,21],[89,11,101,9,"map"],[89,14,99,21],[89,15,102,10],[89,25,102,10,"route"],[89,30,102,15],[90,0,102,15],[90,35,104,17,"route"],[90,40,102,15],[91,0,105,14,"key"],[91,12,105,14,"key"],[91,15,105,17],[91,17,105,19,"route"],[91,22,105,24],[91,23,105,25,"key"],[91,26,105,19],[91,30,105,35,"route"],[91,35,105,40],[91,36,105,41,"name"],[91,40,105,19],[91,49,105,49],[91,72,102,15],[92,0,106,14,"params"],[92,12,106,14,"params"],[92,18,106,20],[92,20,107,16,"routeParamList"],[92,34,107,30],[92,35,107,31,"route"],[92,40,107,36],[92,41,107,37,"name"],[92,45,107,30],[92,46,107,16],[92,51,107,47,"undefined"],[92,60,107,16],[92,81,109,25,"routeParamList"],[92,95,109,39],[92,96,109,40,"route"],[92,101,109,45],[92,102,109,46,"name"],[92,106,109,39],[92,107,107,16],[92,113,110,25,"route"],[92,118,110,30],[92,119,110,31,"params"],[92,125,107,16],[92,129,112,20,"route"],[92,134,112,25],[92,135,112,26,"params"],[93,0,102,15],[94,0,102,15],[94,9,99,21],[94,10,99,6],[96,0,116,6],[96,12,116,10,"routes"],[96,18,116,16],[96,19,116,17,"length"],[96,25,116,10],[96,30,116,28],[96,31,116,6],[96,33,116,31],[97,0,117,8],[97,14,117,14,"initialRouteName"],[97,30,117,30],[97,33,118,10,"options"],[97,40,118,17],[97,41,118,18,"initialRouteName"],[97,57,118,10],[97,62,118,39,"undefined"],[97,71,118,10],[97,74,119,14,"options"],[97,81,119,21],[97,82,119,22,"initialRouteName"],[97,98,118,10],[97,101,120,14,"routeNames"],[97,111,120,24],[97,112,120,25],[97,113,120,24],[97,114,117,8],[98,0,122,8,"routes"],[98,10,122,8,"routes"],[98,16,122,14],[98,17,122,15,"push"],[98,21,122,8],[98,22,122,20],[99,0,123,10,"key"],[99,12,123,10,"key"],[99,15,123,13],[99,17,123,18,"initialRouteName"],[99,33,123,13],[99,42,123,38],[99,65,122,20],[100,0,124,10,"name"],[100,12,124,10,"name"],[100,16,124,14],[100,18,124,16,"initialRouteName"],[100,34,122,20],[101,0,125,10,"params"],[101,12,125,10,"params"],[101,18,125,16],[101,20,125,18,"routeParamList"],[101,34,125,32],[101,35,125,33,"initialRouteName"],[101,51,125,32],[102,0,122,20],[102,11,122,8],[103,0,127,7],[105,0,129,6],[105,15,129,13],[106,0,130,8,"stale"],[106,10,130,8,"stale"],[106,15,130,13],[106,17,130,15],[106,22,129,13],[107,0,131,8,"type"],[107,10,131,8,"type"],[107,14,131,12],[107,16,131,14],[107,23,129,13],[108,0,132,8,"key"],[108,10,132,8,"key"],[108,13,132,11],[108,26,132,22],[108,49,129,13],[109,0,133,8,"index"],[109,10,133,8,"index"],[109,15,133,13],[109,17,133,15,"routes"],[109,23,133,21],[109,24,133,22,"length"],[109,30,133,15],[109,33,133,31],[109,34,129,13],[110,0,134,8,"routeNames"],[110,10,134,8,"routeNames"],[110,20,134,18],[110,22,134,8,"routeNames"],[110,32,129,13],[111,0,135,8,"routes"],[111,10,135,8,"routes"],[111,16,135,14],[111,18,135,8,"routes"],[112,0,129,13],[112,9,129,6],[113,0,137,5],[113,7,64,3],[114,0,139,4,"getStateForRouteNamesChange"],[114,6,139,4,"getStateForRouteNamesChange"],[114,33,64,3],[114,72,139,32,"state"],[114,77,64,3],[114,86,139,71],[115,0,139,71],[115,12,139,41,"routeNames"],[115,22,139,71],[115,31,139,41,"routeNames"],[115,41,139,71],[116,0,139,71],[116,12,139,53,"routeParamList"],[116,26,139,71],[116,35,139,53,"routeParamList"],[116,49,139,71],[117,0,140,6],[117,12,140,12,"routes"],[117,18,140,18],[117,21,140,21,"state"],[117,26,140,26],[117,27,140,27,"routes"],[117,33,140,21],[117,34,140,34,"filter"],[117,40,140,21],[117,41,140,41],[117,51,140,41,"route"],[117,56,140,46],[118,0,140,46],[118,17,141,8,"routeNames"],[118,27,141,18],[118,28,141,19,"includes"],[118,36,141,8],[118,37,141,28,"route"],[118,42,141,33],[118,43,141,34,"name"],[118,47,141,8],[118,48,140,46],[119,0,140,46],[119,9,140,21],[119,10,140,6],[121,0,144,6],[121,12,144,10,"routes"],[121,18,144,16],[121,19,144,17,"length"],[121,25,144,10],[121,30,144,28],[121,31,144,6],[121,33,144,31],[122,0,145,8],[122,14,145,14,"initialRouteName"],[122,30,145,30],[122,33,146,10,"options"],[122,40,146,17],[122,41,146,18,"initialRouteName"],[122,57,146,10],[122,62,146,39,"undefined"],[122,71,146,10],[122,75,147,10,"routeNames"],[122,85,147,20],[122,86,147,21,"includes"],[122,94,147,10],[122,95,147,30,"options"],[122,102,147,37],[122,103,147,38,"initialRouteName"],[122,119,147,10],[122,120,146,10],[122,123,148,14,"options"],[122,130,148,21],[122,131,148,22,"initialRouteName"],[122,147,146,10],[122,150,149,14,"routeNames"],[122,160,149,24],[122,161,149,25],[122,162,149,24],[122,163,145,8],[123,0,151,8,"routes"],[123,10,151,8,"routes"],[123,16,151,14],[123,17,151,15,"push"],[123,21,151,8],[123,22,151,20],[124,0,152,10,"key"],[124,12,152,10,"key"],[124,15,152,13],[124,17,152,18,"initialRouteName"],[124,33,152,13],[124,42,152,38],[124,65,151,20],[125,0,153,10,"name"],[125,12,153,10,"name"],[125,16,153,14],[125,18,153,16,"initialRouteName"],[125,34,151,20],[126,0,154,10,"params"],[126,12,154,10,"params"],[126,18,154,16],[126,20,154,18,"routeParamList"],[126,34,154,32],[126,35,154,33,"initialRouteName"],[126,51,154,32],[127,0,151,20],[127,11,151,8],[128,0,156,7],[130,0,158,6],[130,33,159,11,"state"],[130,38,158,6],[131,0,160,8,"routeNames"],[131,10,160,8,"routeNames"],[131,20,160,18],[131,22,160,8,"routeNames"],[131,32,158,6],[132,0,161,8,"routes"],[132,10,161,8,"routes"],[132,16,161,14],[132,18,161,8,"routes"],[132,24,158,6],[133,0,162,8,"index"],[133,10,162,8,"index"],[133,15,162,13],[133,17,162,15,"Math"],[133,21,162,19],[133,22,162,20,"min"],[133,25,162,15],[133,26,162,24,"state"],[133,31,162,29],[133,32,162,30,"index"],[133,37,162,15],[133,39,162,37,"routes"],[133,45,162,43],[133,46,162,44,"length"],[133,52,162,37],[133,55,162,53],[133,56,162,15],[134,0,158,6],[135,0,164,5],[135,7,64,3],[136,0,166,4,"getStateForRouteFocus"],[136,6,166,4,"getStateForRouteFocus"],[136,27,64,3],[136,60,166,26,"state"],[136,65,64,3],[136,67,166,33,"key"],[136,70,64,3],[136,72,166,38],[137,0,167,6],[137,12,167,12,"index"],[137,17,167,17],[137,20,167,20,"state"],[137,25,167,25],[137,26,167,26,"routes"],[137,32,167,20],[137,33,167,33,"findIndex"],[137,42,167,20],[137,43,167,43],[137,53,167,43,"r"],[137,54,167,44],[138,0,167,44],[138,17,167,48,"r"],[138,18,167,49],[138,19,167,50,"key"],[138,22,167,48],[138,27,167,58,"key"],[138,30,167,44],[139,0,167,44],[139,9,167,20],[139,10,167,6],[141,0,169,6],[141,12,169,10,"index"],[141,17,169,15],[141,22,169,20],[141,23,169,21],[141,24,169,10],[141,28,169,26,"index"],[141,33,169,31],[141,38,169,36,"state"],[141,43,169,41],[141,44,169,42,"index"],[141,49,169,6],[141,51,169,49],[142,0,170,8],[142,17,170,15,"state"],[142,22,170,8],[143,0,171,7],[145,0,173,6],[145,33,174,11,"state"],[145,38,173,6],[146,0,175,8,"index"],[146,10,175,8,"index"],[146,15,175,13],[146,17,175,8,"index"],[146,22,173,6],[147,0,176,8,"routes"],[147,10,176,8,"routes"],[147,16,176,14],[147,18,176,16,"state"],[147,23,176,21],[147,24,176,22,"routes"],[147,30,176,16],[147,31,176,29,"slice"],[147,36,176,16],[147,37,176,35],[147,38,176,16],[147,40,176,38,"index"],[147,45,176,43],[147,48,176,46],[147,49,176,16],[148,0,173,6],[149,0,178,5],[149,7,64,3],[150,0,180,4,"getStateForAction"],[150,6,180,4,"getStateForAction"],[150,23,64,3],[150,52,180,22,"state"],[150,57,64,3],[150,59,180,29,"action"],[150,65,64,3],[150,67,180,37,"options"],[150,74,64,3],[150,76,180,46],[151,0,180,46],[151,12,181,14,"routeParamList"],[151,26,180,46],[151,29,181,33,"options"],[151,36,180,46],[151,37,181,14,"routeParamList"],[151,51,180,46],[153,0,183,6],[153,16,183,14,"action"],[153,22,183,20],[153,23,183,21,"type"],[153,27,183,6],[154,0,184,8],[154,15,184,13],[154,24,184,8],[155,0,184,24],[156,0,185,10],[156,18,185,16,"index"],[156,23,185,21],[156,26,185,24,"action"],[156,32,185,30],[156,33,185,31,"source"],[156,39,185,24],[156,42,186,14,"state"],[156,47,186,19],[156,48,186,20,"routes"],[156,54,186,14],[156,55,186,27,"findIndex"],[156,64,186,14],[156,65,186,37],[156,75,186,37,"r"],[156,76,186,38],[157,0,186,38],[157,23,186,42,"r"],[157,24,186,43],[157,25,186,44,"key"],[157,28,186,42],[157,33,186,52,"action"],[157,39,186,58],[157,40,186,59,"source"],[157,46,186,38],[158,0,186,38],[158,15,186,14],[158,16,185,24],[158,19,187,14,"state"],[158,24,187,19],[158,25,187,20,"index"],[158,30,185,10],[160,0,189,10],[160,18,189,14,"index"],[160,23,189,19],[160,28,189,24],[160,29,189,25],[160,30,189,10],[160,32,189,28],[161,0,190,12],[161,23,190,19],[161,27,190,12],[162,0,191,11],[164,0,184,24],[164,36,193,40,"action"],[164,42,193,46],[164,43,193,47,"payload"],[164,50,184,24],[165,0,184,24],[165,18,193,18,"name"],[165,22,184,24],[165,41,193,18,"name"],[165,45,184,24],[166,0,184,24],[166,18,193,24,"key"],[166,21,184,24],[166,40,193,24,"key"],[166,43,184,24],[167,0,184,24],[167,18,193,29,"params"],[167,24,184,24],[167,43,193,29,"params"],[167,49,184,24],[169,0,195,10],[169,18,195,14],[169,19,195,15,"state"],[169,24,195,20],[169,25,195,21,"routeNames"],[169,35,195,15],[169,36,195,32,"includes"],[169,44,195,15],[169,45,195,41,"name"],[169,49,195,15],[169,50,195,10],[169,52,195,48],[170,0,196,12],[170,23,196,19],[170,27,196,12],[171,0,197,11],[173,0,199,10],[173,39,200,15,"state"],[173,44,199,10],[174,0,201,12,"routes"],[174,16,201,12,"routes"],[174,22,201,18],[174,24,201,20,"state"],[174,29,201,25],[174,30,201,26,"routes"],[174,36,201,20],[174,37,201,33,"map"],[174,40,201,20],[174,41,201,37],[174,51,201,38,"route"],[174,56,201,37],[174,58,201,45,"i"],[174,59,201,37],[175,0,201,37],[175,25,202,14,"i"],[175,26,202,15],[175,31,202,20,"index"],[175,36,202,14],[175,39,203,18],[176,0,204,20,"key"],[176,20,204,20,"key"],[176,23,204,23],[176,25,204,25,"key"],[176,28,204,28],[176,33,204,33,"undefined"],[176,42,204,25],[176,45,204,45,"key"],[176,48,204,25],[176,51,204,54,"name"],[176,55,204,25],[176,64,204,62],[176,87,203,18],[177,0,205,20,"name"],[177,20,205,20,"name"],[177,24,205,24],[177,26,205,20,"name"],[177,30,203,18],[178,0,206,20,"params"],[178,20,206,20,"params"],[178,26,206,26],[178,28,207,22,"routeParamList"],[178,42,207,36],[178,43,207,37,"name"],[178,47,207,36],[178,48,207,22],[178,53,207,47,"undefined"],[178,62,207,22],[178,83,209,31,"routeParamList"],[178,97,209,45],[178,98,209,46,"name"],[178,102,209,45],[178,103,207,22],[178,109,210,31,"params"],[178,115,207,22],[178,119,212,26,"params"],[179,0,203,18],[179,19,202,14],[179,22,214,18,"route"],[179,27,201,37],[180,0,201,37],[180,17,201,20],[181,0,199,10],[182,0,217,9],[184,0,219,8],[184,15,219,13],[184,21,219,8],[185,0,220,10],[185,16,220,14,"state"],[185,21,220,19],[185,22,220,20,"routeNames"],[185,32,220,14],[185,33,220,31,"includes"],[185,41,220,14],[185,42,220,40,"action"],[185,48,220,46],[185,49,220,47,"payload"],[185,56,220,40],[185,57,220,55,"name"],[185,61,220,14],[185,62,220,10],[185,64,220,62],[186,0,221,12],[186,39,222,17,"state"],[186,44,221,12],[187,0,223,14,"index"],[187,16,223,14,"index"],[187,21,223,19],[187,23,223,21,"state"],[187,28,223,26],[187,29,223,27,"index"],[187,34,223,21],[187,37,223,35],[187,38,221,12],[188,0,224,14,"routes"],[188,16,224,14,"routes"],[188,22,224,20],[188,67,225,19,"state"],[188,72,225,24],[188,73,225,25,"routes"],[188,79,224,20],[188,83,226,16],[189,0,227,18,"key"],[189,18,227,18,"key"],[189,21,227,21],[189,23,228,20,"action"],[189,29,228,26],[189,30,228,27,"payload"],[189,37,228,20],[189,38,228,35,"key"],[189,41,228,20],[189,46,228,43,"undefined"],[189,55,228,20],[189,58,229,27,"action"],[189,64,229,33],[189,65,229,34,"payload"],[189,72,229,27],[189,73,229,42,"name"],[189,77,228,20],[189,86,229,50],[189,109,228,20],[189,112,230,24,"action"],[189,118,230,30],[189,119,230,31,"payload"],[189,126,230,24],[189,127,230,39,"key"],[189,130,226,16],[190,0,231,18,"name"],[190,18,231,18,"name"],[190,22,231,22],[190,24,231,24,"action"],[190,30,231,30],[190,31,231,31,"payload"],[190,38,231,24],[190,39,231,39,"name"],[190,43,226,16],[191,0,232,18,"params"],[191,18,232,18,"params"],[191,24,232,24],[191,26,233,20,"routeParamList"],[191,40,233,34],[191,41,233,35,"action"],[191,47,233,41],[191,48,233,42,"payload"],[191,55,233,35],[191,56,233,50,"name"],[191,60,233,34],[191,61,233,20],[191,66,233,60,"undefined"],[191,75,233,20],[191,96,235,29,"routeParamList"],[191,110,235,43],[191,111,235,44,"action"],[191,117,235,50],[191,118,235,51,"payload"],[191,125,235,44],[191,126,235,59,"name"],[191,130,235,43],[191,131,233,20],[191,137,236,29,"action"],[191,143,236,35],[191,144,236,36,"payload"],[191,151,236,29],[191,152,236,44,"params"],[191,158,233,20],[191,162,238,24,"action"],[191,168,238,30],[191,169,238,31,"payload"],[191,176,238,24],[191,177,238,39,"params"],[192,0,226,16],[192,17,224,20],[193,0,221,12],[194,0,242,11],[196,0,244,10],[196,19,244,17],[196,23,244,10],[198,0,246,8],[198,15,246,13],[198,20,246,8],[199,0,246,20],[200,0,247,10],[200,18,247,16,"index"],[200,24,247,21],[200,27,248,12,"action"],[200,33,248,18],[200,34,248,19,"target"],[200,40,248,12],[200,45,248,30,"state"],[200,50,248,35],[200,51,248,36,"key"],[200,54,248,12],[200,58,248,43,"action"],[200,64,248,49],[200,65,248,50,"source"],[200,71,248,12],[200,74,249,16,"state"],[200,79,249,21],[200,80,249,22,"routes"],[200,86,249,16],[200,87,249,29,"findIndex"],[200,96,249,16],[200,97,249,39],[200,107,249,39,"r"],[200,108,249,40],[201,0,249,40],[201,23,249,44,"r"],[201,24,249,45],[201,25,249,46,"key"],[201,28,249,44],[201,33,249,54,"action"],[201,39,249,60],[201,40,249,61,"source"],[201,46,249,40],[202,0,249,40],[202,15,249,16],[202,16,248,12],[202,19,250,16,"state"],[202,24,250,21],[202,25,250,22,"index"],[202,30,247,10],[204,0,252,10],[204,18,252,14,"index"],[204,24,252,19],[204,27,252,22],[204,28,252,10],[204,30,252,25],[205,0,253,12],[205,20,253,18,"count"],[205,25,253,23],[205,28,253,26,"Math"],[205,32,253,30],[205,33,253,31,"max"],[205,36,253,26],[205,37,253,35,"index"],[205,43,253,40],[205,46,253,43,"action"],[205,52,253,49],[205,53,253,50,"payload"],[205,60,253,43],[205,61,253,58,"count"],[205,66,253,35],[205,69,253,66],[205,70,253,26],[205,72,253,69],[205,73,253,26],[205,74,253,12],[206,0,254,12],[206,20,254,18,"routes"],[206,26,254,24],[206,29,254,27,"state"],[206,34,254,32],[206,35,254,33,"routes"],[206,41,254,27],[206,42,255,15,"slice"],[206,47,254,27],[206,48,255,21],[206,49,254,27],[206,51,255,24,"count"],[206,56,254,27],[206,58,256,15,"concat"],[206,64,254,27],[206,65,256,22,"state"],[206,70,256,27],[206,71,256,28,"routes"],[206,77,256,22],[206,78,256,35,"slice"],[206,83,256,22],[206,84,256,41,"index"],[206,90,256,46],[206,93,256,49],[206,94,256,22],[206,95,254,27],[206,96,254,12],[207,0,258,12],[207,41,259,17,"state"],[207,46,258,12],[208,0,260,14,"index"],[208,18,260,14,"index"],[208,23,260,19],[208,25,260,21,"routes"],[208,31,260,27],[208,32,260,28,"length"],[208,38,260,21],[208,41,260,37],[208,42,258,12],[209,0,261,14,"routes"],[209,18,261,14,"routes"],[209,24,261,20],[209,26,261,14,"routes"],[210,0,258,12],[211,0,263,11],[213,0,265,10],[213,21,265,17],[213,25,265,10],[214,0,266,9],[216,0,268,8],[216,15,268,13],[216,27,268,8],[217,0,269,10],[217,19,269,17,"router"],[217,25,269,23],[217,26,269,24,"getStateForAction"],[217,43,269,17],[217,44,270,12,"state"],[217,49,269,17],[217,51,271,12],[218,0,272,14,"type"],[218,14,272,14,"type"],[218,18,272,18],[218,20,272,20],[218,25,271,12],[219,0,273,14,"payload"],[219,14,273,14,"payload"],[219,21,273,21],[219,23,273,23],[220,0,273,25,"count"],[220,16,273,25,"count"],[220,21,273,30],[220,23,273,32,"state"],[220,28,273,37],[220,29,273,38,"routes"],[220,35,273,32],[220,36,273,45,"length"],[220,42,273,32],[220,45,273,54],[221,0,273,23],[222,0,271,12],[222,13,269,17],[222,15,275,12,"options"],[222,22,269,17],[222,23,269,10],[224,0,278,8],[224,15,278,13],[224,25,278,8],[225,0,279,10],[225,16,280,12,"action"],[225,22,280,18],[225,23,280,19,"payload"],[225,30,280,12],[225,31,280,27,"key"],[225,34,280,12],[225,38,281,13,"action"],[225,44,281,19],[225,45,281,20,"payload"],[225,52,281,13],[225,53,281,28,"name"],[225,57,281,13],[225,61,282,14,"state"],[225,66,282,19],[225,67,282,20,"routeNames"],[225,77,282,14],[225,78,282,31,"includes"],[225,86,282,14],[225,87,282,40,"action"],[225,93,282,46],[225,94,282,47,"payload"],[225,101,282,40],[225,102,282,55,"name"],[225,106,282,14],[225,107,279,10],[225,109,283,12],[226,0,285,12],[226,18,285,16,"index"],[226,25,285,21],[226,28,285,24],[226,29,285,25],[226,30,285,12],[228,0,287,12],[228,18,288,15,"state"],[228,23,288,20],[228,24,288,21,"routes"],[228,30,288,15],[228,31,288,28,"state"],[228,36,288,33],[228,37,288,34,"index"],[228,42,288,15],[228,44,288,41,"name"],[228,48,288,15],[228,53,288,50,"action"],[228,59,288,56],[228,60,288,57,"payload"],[228,67,288,50],[228,68,288,65,"name"],[228,72,288,15],[228,76,289,16,"action"],[228,82,289,22],[228,83,289,23,"payload"],[228,90,289,16],[228,91,289,31,"key"],[228,94,289,16],[228,99,289,39,"undefined"],[228,108,288,14],[228,112,290,14,"state"],[228,117,290,19],[228,118,290,20,"routes"],[228,124,290,14],[228,125,290,27,"state"],[228,130,290,32],[228,131,290,33,"index"],[228,136,290,14],[228,138,290,40,"key"],[228,141,290,14],[228,146,290,48,"action"],[228,152,290,54],[228,153,290,55,"payload"],[228,160,290,48],[228,161,290,63,"key"],[228,164,287,12],[228,166,291,14],[229,0,292,14,"index"],[229,16,292,14,"index"],[229,23,292,19],[229,26,292,22,"state"],[229,31,292,27],[229,32,292,28,"index"],[229,37,292,14],[230,0,293,13],[230,15,287,12],[230,21,293,19],[231,0,294,14],[231,21,294,19],[231,25,294,23,"i"],[231,26,294,24],[231,29,294,27,"state"],[231,34,294,32],[231,35,294,33,"routes"],[231,41,294,27],[231,42,294,40,"length"],[231,48,294,27],[231,51,294,49],[231,52,294,14],[231,54,294,52,"i"],[231,55,294,53],[231,59,294,57],[231,60,294,14],[231,62,294,60,"i"],[231,63,294,61],[231,65,294,14],[231,67,294,65],[232,0,295,16],[232,22,296,19,"state"],[232,27,296,24],[232,28,296,25,"routes"],[232,34,296,19],[232,35,296,32,"i"],[232,36,296,19],[232,38,296,35,"name"],[232,42,296,19],[232,47,296,44,"action"],[232,53,296,50],[232,54,296,51,"payload"],[232,61,296,44],[232,62,296,59,"name"],[232,66,296,19],[232,70,297,20,"action"],[232,76,297,26],[232,77,297,27,"payload"],[232,84,297,20],[232,85,297,35,"key"],[232,88,297,20],[232,93,297,43,"undefined"],[232,102,296,18],[232,106,298,18,"state"],[232,111,298,23],[232,112,298,24,"routes"],[232,118,298,18],[232,119,298,31,"i"],[232,120,298,18],[232,122,298,34,"key"],[232,125,298,18],[232,130,298,42,"action"],[232,136,298,48],[232,137,298,49,"payload"],[232,144,298,42],[232,145,298,57,"key"],[232,148,295,16],[232,150,299,18],[233,0,300,18,"index"],[233,20,300,18,"index"],[233,27,300,23],[233,30,300,26,"i"],[233,31,300,18],[234,0,301,18],[235,0,302,17],[236,0,303,15],[237,0,304,13],[239,0,306,12],[239,18,307,14,"index"],[239,25,307,19],[239,30,307,24],[239,31,307,25],[239,32,307,14],[239,36,308,14,"action"],[239,42,308,20],[239,43,308,21,"payload"],[239,50,308,14],[239,51,308,29,"key"],[239,54,307,14],[239,58,309,14,"action"],[239,64,309,20],[239,65,309,21,"payload"],[239,72,309,14],[239,73,309,29,"name"],[239,77,309,14],[239,82,309,38,"undefined"],[239,91,306,12],[239,93,310,14],[240,0,311,14],[240,23,311,21],[240,27,311,14],[241,0,312,13],[243,0,314,12],[243,18,314,16,"index"],[243,25,314,21],[243,30,314,26],[243,31,314,27],[243,32,314,16],[243,36,314,32,"action"],[243,42,314,38],[243,43,314,39,"payload"],[243,50,314,32],[243,51,314,47,"name"],[243,55,314,32],[243,60,314,56,"undefined"],[243,69,314,12],[243,71,314,67],[244,0,315,14],[244,23,315,21,"router"],[244,29,315,27],[244,30,315,28,"getStateForAction"],[244,47,315,21],[244,48,316,16,"state"],[244,53,315,21],[244,55,317,16],[245,0,318,18,"type"],[245,18,318,18,"type"],[245,22,318,22],[245,24,318,24],[245,30,317,16],[246,0,319,18,"payload"],[246,18,319,18,"payload"],[246,25,319,25],[246,27,319,27],[247,0,320,20,"key"],[247,20,320,20,"key"],[247,23,320,23],[247,25,320,25,"action"],[247,31,320,31],[247,32,320,32,"payload"],[247,39,320,25],[247,40,320,40,"key"],[247,43,319,27],[248,0,321,20,"name"],[248,20,321,20,"name"],[248,24,321,24],[248,26,321,26,"action"],[248,32,321,32],[248,33,321,33,"payload"],[248,40,321,26],[248,41,321,41,"name"],[248,45,319,27],[249,0,322,20,"params"],[249,20,322,20,"params"],[249,26,322,26],[249,28,322,28,"action"],[249,34,322,34],[249,35,322,35,"payload"],[249,42,322,28],[249,43,322,43,"params"],[250,0,319,27],[251,0,317,16],[251,17,315,21],[251,19,325,16,"options"],[251,26,315,21],[251,27,315,14],[252,0,327,13],[254,0,329,12],[254,39,330,17,"state"],[254,44,329,12],[255,0,331,14,"index"],[255,16,331,14,"index"],[255,21,331,19],[255,23,331,14,"index"],[255,30,329,12],[256,0,332,14,"routes"],[256,16,332,14,"routes"],[256,22,332,20],[256,67,333,19,"state"],[256,72,333,24],[256,73,333,25,"routes"],[256,79,333,19],[256,80,333,32,"slice"],[256,85,333,19],[256,86,333,38],[256,87,333,19],[256,89,333,41,"index"],[256,96,333,19],[256,97,332,20],[256,101,334,16,"action"],[256,107,334,22],[256,108,334,23,"payload"],[256,115,334,16],[256,116,334,31,"params"],[256,122,334,16],[256,127,334,42,"undefined"],[256,136,334,16],[256,157,336,25,"state"],[256,162,336,30],[256,163,336,31,"routes"],[256,169,336,25],[256,170,336,38,"index"],[256,177,336,25],[256,178,334,16],[257,0,337,22,"params"],[257,18,337,22,"params"],[257,24,337,28],[257,44,338,27,"state"],[257,49,338,32],[257,50,338,33,"routes"],[257,56,338,27],[257,57,338,40,"index"],[257,64,338,27],[257,66,338,47,"params"],[257,72,337,28],[257,78,339,27,"action"],[257,84,339,33],[257,85,339,34,"payload"],[257,92,339,27],[257,93,339,42,"params"],[257,99,337,28],[258,0,334,16],[258,21,342,20,"state"],[258,26,342,25],[258,27,342,26,"routes"],[258,33,342,20],[258,34,342,33,"index"],[258,41,342,20],[258,42,332,20],[259,0,329,12],[260,0,345,11],[262,0,347,10],[262,19,347,17],[262,23,347,10],[264,0,349,8],[264,15,349,13],[264,24,349,8],[265,0,350,10],[265,16,350,14,"state"],[265,21,350,19],[265,22,350,20,"index"],[265,27,350,14],[265,30,350,28],[265,31,350,10],[265,33,350,31],[266,0,351,12],[266,21,351,19,"router"],[266,27,351,25],[266,28,351,26,"getStateForAction"],[266,45,351,19],[266,46,352,14,"state"],[266,51,351,19],[266,53,353,14],[267,0,354,16,"type"],[267,16,354,16,"type"],[267,20,354,20],[267,22,354,22],[267,27,353,14],[268,0,355,16,"payload"],[268,16,355,16,"payload"],[268,23,355,23],[268,25,355,25],[269,0,355,27,"count"],[269,18,355,27,"count"],[269,23,355,32],[269,25,355,34],[270,0,355,25],[270,17,353,14],[271,0,356,16,"target"],[271,16,356,16,"target"],[271,22,356,22],[271,24,356,24,"action"],[271,30,356,30],[271,31,356,31,"target"],[271,37,353,14],[272,0,357,16,"source"],[272,16,357,16,"source"],[272,22,357,22],[272,24,357,24,"action"],[272,30,357,30],[272,31,357,31,"source"],[273,0,353,14],[273,15,351,19],[273,17,359,14,"options"],[273,24,351,19],[273,25,351,12],[274,0,361,11],[276,0,363,10],[276,19,363,17],[276,23,363,10],[278,0,365,8],[279,0,366,10],[279,19,366,17,"BaseRouter"],[279,39,366,28,"getStateForAction"],[279,56,366,17],[279,57,366,46,"state"],[279,62,366,17],[279,64,366,53,"action"],[279,70,366,17],[279,71,366,10],[280,0,183,6],[281,0,368,5],[281,7,64,3],[282,0,370,4,"actionCreators"],[282,6,370,4,"actionCreators"],[282,20,370,18],[282,22,370,20,"StackActions"],[283,0,64,3],[283,6,61,2],[285,0,373,2],[285,11,373,9,"router"],[285,17,373,2],[286,0,374,1]],"functionMap":{"names":["<global>","StackActions.replace","StackActions.push","StackActions.pop","StackActions.popToTop","StackRouter","router.getInitialState","router.getRehydratedState","state.routes.filter$argument_0","state.routes.filter.map$argument_0","router.getStateForRouteNamesChange","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0"],"mappings":"AAA;EC6C;GDE;EEC;GFE;EGC;GHE;EIC;GJE;eKG;ICS;KDqB;IEE;gBCQ,wCD;UEE;+BFW;KFwB;IKE;yCFC;uCEC;KLuB;IME;2CCC,kBD;KNW;IQE;qCDM,4BC;qCCe;uBDa;uCDmC,4BC;KRuH;CLM"}},"type":"js/module"}]}